From f29e2156643bc0e89514f0e5598adf8408abacaf Mon Sep 17 00:00:00 2001
From: Joe Honold <mozzwald@gmail.com>
Date: Mon, 27 Jun 2016 10:42:38 -0500
Subject: [PATCH] gcc: bump to 5.3.0

---
 devel/gcc/Makefile                                 | 82 ++++++++++++++++++----
 ...2-dont-choke-when-building-32bit-on-64bit.patch |  9 ++-
 devel/gcc/patches/004-libcc1_uclibc_lm.patch       | 11 +++
 devel/gcc/patches/930-osdefines.patch              | 13 ++++
 4 files changed, 97 insertions(+), 18 deletions(-)
 create mode 100644 devel/gcc/patches/004-libcc1_uclibc_lm.patch
 create mode 100644 devel/gcc/patches/930-osdefines.patch

diff --git a/devel/gcc/Makefile b/devel/gcc/Makefile
index 44775d4..82c8eeb 100644
--- a/devel/gcc/Makefile
+++ b/devel/gcc/Makefile
@@ -4,17 +4,20 @@
 # This is free software, licensed under the GNU General Public License v2.
 # See /LICENSE for more information.
 #
-#
+# Upgraded from 4.8.3 to 5.3.0
 
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=gcc
-PKG_VERSION:=4.8.3
-PKG_RELEASE:=1
-PKG_SOURCE_URL:=@GNU/gcc/gcc-$(PKG_VERSION)
+PKG_VERSION:=5.3.0
+PKG_RELEASE:=3
+PKG_SOURCE_URL:=ftp://ftp.fu-berlin.de/unix/languages/gcc/releases/gcc-$(PKG_VERSION) \
+     http://mirrors.rcn.net/pub/sourceware/gcc/releases/gcc-$(PKG_VERSION) \
+    ftp://ftp.gnu.org/gnu/gcc/releases/gcc-$(PKG_VERSION)
 
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2
-PKG_MD5SUM:=7c60f24fab389f77af203d2516ee110f
+PKG_MD5SUM:=c9616fd448f980259c31de613e575719
+PATCH_DIR:=$(TOPDIR)/toolchain/gcc/patches/$(PKG_VERSION)
 PKG_INSTALL:=1
 PKG_FIXUP:=libtool
 PKG_BUILD_PARALLEL:=1
@@ -46,12 +49,46 @@ define Package/gcc/description
 	build a native toolchain for compiling on target
 endef
 
+GMPSRC=gmp-4.3.2
+
+define Download/gmp
+  URL:=ftp://gcc.gnu.org/pub/gcc/infrastructure/
+  FILE:=$(GMPSRC).tar.bz2
+  MD5SUM:=dd60683d7057917e34630b4a787932e8
+endef
+$(eval $(call Download,gmp))
+
+MPCSRC=mpc-0.8.1
+
+define Download/mpc
+  URL:=ftp://gcc.gnu.org/pub/gcc/infrastructure/
+  FILE:=$(MPCSRC).tar.gz
+  MD5SUM:=5b34aa804d514cc295414a963aedb6bf
+endef
+$(eval $(call Download,mpc))
+
+MPFRSRC=mpfr-2.4.2
+
+define Download/mpfr
+  URL:=ftp://gcc.gnu.org/pub/gcc/infrastructure/
+  FILE:=$(MPFRSRC).tar.bz2
+  MD5SUM:=89e59fe665e2b3ad44a6789f40b059a0
+endef
+$(eval $(call Download,mpfr))
 
 define Build/Prepare
 	$(PKG_UNPACK)
-# 	we have to download additional stuff before patching
-	(cd $(PKG_BUILD_DIR) && ./contrib/download_prerequisites)
+# 	we have to download and unpack additional stuff before patching
+	tar -C $(PKG_BUILD_DIR) -xvjf $(DL_DIR)/$(GMPSRC).tar.bz2
+	ln -sf $(PKG_BUILD_DIR)/$(GMPSRC) $(PKG_BUILD_DIR)/gmp
+	tar -C $(PKG_BUILD_DIR) -xvzf $(DL_DIR)/$(MPCSRC).tar.gz
+	ln -sf $(PKG_BUILD_DIR)/$(MPCSRC) $(PKG_BUILD_DIR)/mpc
+	tar -C $(PKG_BUILD_DIR) -xvjf $(DL_DIR)/$(MPFRSRC).tar.bz2
+	ln -sf $(PKG_BUILD_DIR)/$(MPFRSRC) $(PKG_BUILD_DIR)/mpfr
 	$(Build/Patch)
+	patch -p1 -d "$(PKG_BUILD_DIR)" < ./patches/002-dont-choke-when-building-32bit-on-64bit.patch
+	patch -p1 -d "$(PKG_BUILD_DIR)" < ./patches/003-mpfr-longlong-mips.patch
+
 #	poor man's fix for `none-openwrt-linux' not recognized when building with musl
 	cp $(PKG_BUILD_DIR)/config.sub $(PKG_BUILD_DIR)/mpfr/
 	cp $(PKG_BUILD_DIR)/config.sub $(PKG_BUILD_DIR)/gmp/
@@ -72,10 +109,14 @@ define Build/Configure
 			--with-bugurl=$(BUGURL) \
 			--with-pkgversion="$(PKGVERSION)" \
 			--enable-shared \
-			--disable-__cxa_atexit \
+			$(if $(CONFIG_LIBC_USE_GLIBC),--enable,--disable)-__cxa_atexit \
+			--with-default-libstdcxx-abi=gcc4-compatible \
 			--enable-target-optspace \
 			--with-gnu-ld \
 			--disable-nls \
+			--disable-libsanitizer \
+			--disable-libvtv \
+			--disable-libcilkrts \
 			--disable-libmudflap \
 			--disable-multilib \
 			--disable-libgomp \
@@ -86,10 +127,9 @@ define Build/Configure
 			--with-host-libstdcxx=-lstdc++ \
 			--prefix=/usr \
 			--libexecdir=/usr/lib \
+			--with-local-prefix=/usr \
 			$(SOFT_FLOAT_CONFIG_OPTION) \
 			$(call qstrip,$(CONFIG_EXTRA_GCC_CONFIG_OPTIONS)) \
-			$(if $(CONFIG_mips64)$(CONFIG_mips64el),--with-arch=mips64 \
-			--with-abi=$(subst ",,$(CONFIG_MIPS64_ABI))) \
 	);
 endef
 
@@ -98,6 +138,18 @@ define Build/Compile
 			DESTDIR="$(PKG_INSTALL_DIR)" $(MAKE_ARGS) all install
 endef
 
+ENVCFLAGS:="$(TARGET_OPTIMIZATION) $(EXTRA_OPTIMIZATION)
+ifeq ($(CONFIG_SOFT_FLOAT),y)
+    ifeq ($(CONFIG_arm),y)
+	ENVCFLAGS+= -mfloat-abi=soft
+    else
+	ENVCFLAGS+= -msoft-float
+    endif
+endif
+ENVCFLAGS+="
+
+ENVLDFLAGS:="-Wl,-rpath=/usr/lib -Wl,--dynamic-linker=/usr/lib/$(DYNLINKER) -L/usr/lib"
+
 define Package/gcc/install
 	$(INSTALL_DIR) $(1)/usr/bin $(1)/usr/lib $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)
 	cp -ar $(PKG_INSTALL_DIR)/usr/include $(1)/usr
@@ -108,11 +160,15 @@ define Package/gcc/install
 	ln -s $(REAL_GNU_TARGET_NAME)-gcc $(1)/usr/bin/gcc
 	ln -s $(REAL_GNU_TARGET_NAME)-gcc $(1)/usr/bin/$(REAL_GNU_TARGET_NAME)-gcc-$(PKG_VERSION)
 	cp -ar $(PKG_INSTALL_DIR)/usr/lib/gcc $(1)/usr/lib
-	$(RM) $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)/*.a
-	cp -ar $(TOOLCHAIN_DIR)/include $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)
+	cp -ar $(TOOLCHAIN_DIR)/include $(1)/usr
 	cp -a $(TOOLCHAIN_DIR)/lib/*.{o,so*} $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)
 	cp -a $(TOOLCHAIN_DIR)/lib/*nonshared*.a  $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)
-	grep "GROUP.*-lgcc" $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)/libgcc_s.so && cp -a $(PKG_INSTALL_DIR)/usr/lib/gcc/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)/libgcc.a $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)/ ; true
+	rm -f $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)/libgo*
+	rm -f $(1)/usr/lib/$(PKG_NAME)/$(REAL_GNU_TARGET_NAME)/$(PKG_VERSION)/libcc1*
+	echo '#!/bin/sh' > $(1)/usr/bin/gcc_env.sh
+	echo 'export LDFLAGS=$(ENVLDFLAGS)' >> $(1)/usr/bin/gcc_env.sh
+	echo 'export CFLAGS=$(ENVCFLAGS)' >> $(1)/usr/bin/gcc_env.sh
+	chmod +x $(1)/usr/bin/gcc_env.sh
 endef
 
 $(eval $(call BuildPackage,gcc))
diff --git a/devel/gcc/patches/002-dont-choke-when-building-32bit-on-64bit.patch b/devel/gcc/patches/002-dont-choke-when-building-32bit-on-64bit.patch
index 8472960..a00cbcd 100644
--- a/devel/gcc/patches/002-dont-choke-when-building-32bit-on-64bit.patch
+++ b/devel/gcc/patches/002-dont-choke-when-building-32bit-on-64bit.patch
@@ -1,15 +1,14 @@
-diff --git a/gcc/real.h b/gcc/real.h
-index 2ff84f6..fbb4b0e 100644
 --- a/gcc/real.h
 +++ b/gcc/real.h
-@@ -72,8 +72,10 @@ struct GTY(()) real_value {
+@@ -75,9 +75,10 @@
     + (REAL_VALUE_TYPE_SIZE%HOST_BITS_PER_WIDE_INT ? 1 : 0)) /* round up */
  
  /* Verify the guess.  */
 +#ifndef __LP64__
  extern char test_real_width
-   [sizeof(REAL_VALUE_TYPE) <= REAL_WIDTH*sizeof(HOST_WIDE_INT) ? 1 : -1];
+   [sizeof (REAL_VALUE_TYPE) <= REAL_WIDTH * sizeof (HOST_WIDE_INT) ? 1 : -1];
+-
 +#endif
- 
  /* Calculate the format for CONST_DOUBLE.  We need as many slots as
     are necessary to overlay a REAL_VALUE_TYPE on them.  This could be
+    as many as four (32-bit HOST_WIDE_INT, 128-bit REAL_VALUE_TYPE).
diff --git a/devel/gcc/patches/004-libcc1_uclibc_lm.patch b/devel/gcc/patches/004-libcc1_uclibc_lm.patch
new file mode 100644
index 0000000..cb96fd5
--- /dev/null
+++ b/devel/gcc/patches/004-libcc1_uclibc_lm.patch
@@ -0,0 +1,11 @@
+--- a/gcc/Makefile.in
++++ b/gcc/Makefile.in
+@@ -343,7 +343,7 @@
+ # This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is
+ # -I../zlib, unless we were configured with --with-system-zlib, in which
+ # case both are empty.
+-ZLIB = @zlibdir@ -lz
++ZLIB = @zlibdir@ -lz -lm
+ ZLIBINC = @zlibinc@
+ 
+ # How to find GMP
diff --git a/devel/gcc/patches/930-osdefines.patch b/devel/gcc/patches/930-osdefines.patch
new file mode 100644
index 0000000..a1b6120
--- /dev/null
+++ b/devel/gcc/patches/930-osdefines.patch
@@ -0,0 +1,13 @@
+--- a/libstdc++-v3/config/os/gnu-linux/os_defines.h	2015-01-05 06:33:28.000000000 -0600
++++ b/libstdc++-v3/config/os/gnu-linux/os_defines.h	2016-04-15 12:32:49.374356001 -0500
+@@ -41,8 +41,8 @@
+ // Provide a declaration for the possibly deprecated gets function, as
+ // glibc 2.15 and later does not declare gets for ISO C11 when
+ // __GNU_SOURCE is defined.
+-#if __GLIBC_PREREQ(2,15) && defined(_GNU_SOURCE)
++//#if __GLIBC_PREREQ(2,15) && defined(_GNU_SOURCE)
+ # undef _GLIBCXX_HAVE_GETS
+-#endif
++//#endif
+ 
+ #endif
-- 
2.1.4

