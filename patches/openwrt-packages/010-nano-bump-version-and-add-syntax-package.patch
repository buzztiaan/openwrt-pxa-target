From 4d63cccb803f08dbd0294f6b2cc1293e35450a8b Mon Sep 17 00:00:00 2001
From: Joe Honold <mozzwald@gmail.com>
Date: Wed, 14 Sep 2016 10:48:51 -0500
Subject: [PATCH] nano: bump version and add syntax package

Signed-off-by: Joe Honold <mozzwald@gmail.com>
---
 utils/nano/Makefile              |  35 ++++-
 utils/nano/files/c.nanorc        |  30 +++++
 utils/nano/files/js.nanorc       |  38 ++++++
 utils/nano/files/makefile.nanorc |   9 ++
 utils/nano/files/nanorc          | 282 +++++++++++++++++++++++++++++++++++++++
 utils/nano/files/nanorc.nanorc   |  16 +++
 utils/nano/files/patch.nanorc    |  10 ++
 utils/nano/files/sh.nanorc       |  22 +++
 utils/nano/files/xml.nanorc      |  10 ++
 9 files changed, 446 insertions(+), 6 deletions(-)
 create mode 100644 utils/nano/files/c.nanorc
 create mode 100644 utils/nano/files/js.nanorc
 create mode 100644 utils/nano/files/makefile.nanorc
 create mode 100644 utils/nano/files/nanorc
 create mode 100644 utils/nano/files/nanorc.nanorc
 create mode 100644 utils/nano/files/patch.nanorc
 create mode 100644 utils/nano/files/sh.nanorc
 create mode 100644 utils/nano/files/xml.nanorc

diff --git a/utils/nano/Makefile b/utils/nano/Makefile
index 8e27ed1..7ff5f8e 100644
--- a/utils/nano/Makefile
+++ b/utils/nano/Makefile
@@ -8,14 +8,14 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=nano
-PKG_VERSION:=2.5.3
+PKG_VERSION:=2.7.0
 PKG_RELEASE:=1
 PKG_LICENSE:=GPL-3.0+
 PKG_LICENSE_FILES:=COPYING
 
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
 PKG_SOURCE_URL:=@GNU/nano
-PKG_MD5SUM:=a04d77611422ab4b6a7b489650c7a793
+PKG_MD5SUM:=0805c5b8c75d4fde053e4b1431270f91
 
 PKG_INSTALL:=1
 PKG_BUILD_PARALLEL:=1
@@ -37,20 +37,43 @@ define Package/nano/description
   of the Pico text editor.
 endef
 
+define Package/nano-syntax
+  $(call Package/nano/Default)
+  SUBMENU:=Editors
+  SECTION:=utils
+  CATEGORY:=Utilities
+  TITLE:=Syntax highlighting definitions for nano editor
+  URL:=http://www.nano-editor.org/
+  MAINTAINER:=Jonathan Bennett <JBennett@incomsystems.biz>
+  DEPENDS:=+nano
+endef
+
 CONFIGURE_ARGS += \
-	--enable-tiny \
 	--disable-glibtest \
 	--disable-utf8 \
+	--disable-libmagic \
         --without-slang \
-        --disable-color \
 
 CONFIGURE_VARS += \
-	ac_cv_header_regex_h=no \
+	ac_cv_header_regex_h=yes \
 
 define Package/nano/install
 	$(INSTALL_DIR) $(1)/usr/bin
 	$(CP) $(PKG_INSTALL_DIR)/usr/bin/$(PKG_NAME) $(1)/usr/bin/
 endef
 
-$(eval $(call BuildPackage,nano))
+define Package/nano-syntax/install
+	$(INSTALL_DIR) $(1)/etc
+		$(CP) ./files/nanorc $(1)/etc/
+	$(INSTALL_DIR) $(1)/usr/share/nano
+		$(CP) ./files/makefile.nanorc $(1)/usr/share/nano/
+		$(CP) ./files/nanorc.nanorc $(1)/usr/share/nano/
+		$(CP) ./files/c.nanorc $(1)/usr/share/nano/
+		$(CP) ./files/sh.nanorc $(1)/usr/share/nano/
+		$(CP) ./files/patch.nanorc $(1)/usr/share/nano/
+		$(CP) ./files/xml.nanorc $(1)/usr/share/nano/
+		$(CP) ./files/js.nanorc $(1)/usr/share/nano/
+endef
 
+$(eval $(call BuildPackage,nano))
+$(eval $(call BuildPackage,nano-syntax))
diff --git a/utils/nano/files/c.nanorc b/utils/nano/files/c.nanorc
new file mode 100644
index 0000000..f271541
--- /dev/null
+++ b/utils/nano/files/c.nanorc
@@ -0,0 +1,30 @@
+## Here is an example for C/C++.
+##
+syntax "c" "\.(c(c|pp|xx)?|C)$" "\.(h(h|pp|xx)?|H)$" "\.ii?$"
+color brightred "[A-Z_][0-9A-Z_]+" 
+color green "(\bfloat\b|\bdouble\b|\bbool\b|\bchar\b|\bint\b|\bshort\b|\blong\b|\bsizeof\b|\benum\b|\bvoid\b|\bstatic\b|\bconst\b|\bstruct\b|\bunion\b|\btypedef\b|\bextern\b|\s(un)?signed|inline)"
+color green "((s?size)|((u_?)?int(8|16|32|64|ptr)))_t"
+color green "(\bclass\b|\bnamespace\b|\btemplate\b|\bpublic\b|\bprotected\b|\bprivate\b|\btypename\b|\bthis\b|\bfriend\b|\bvirtual\b|\busing\b|\bmutable\b|\bvolatile\b|\bregister\b|\bexplicit\b)"
+color brightyellow "(\bfor\b|\bif\b|\bwhile\b|\bdo\b|\belse\b|\bcase\b|\bdefault\b|\bswitch\b)"
+color brightyellow "(\btry\b|\bthrow\b|\bcatch\b|\boperator\b|\bnew\b|\bdelete\b)"
+color magenta "(\bgoto\b|\bcontinue\b|\bbreak\b|\breturn\b)"
+color brightcyan "^[[:space:]]*#[[:space:]]*(define|include(_next)?|(un|ifn?)def|endif|el(if|se)|if|warning|error|pragma)"
+color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"
+##
+## GCC builtins
+color cyan "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"
+##
+## String highlighting.  You will in general want your comments and
+## strings to come last, because syntax highlighting rules will be
+## applied in the order they are read in.
+color brightyellow "<[^= 	]*>" ""(\\.|[^"])*""
+##
+## This string is VERY resource intensive!
+color brightyellow start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""
+
+## Comment highlighting
+color brightblue "//.*"
+color brightblue start="/\*" end="\*/"
+
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/utils/nano/files/js.nanorc b/utils/nano/files/js.nanorc
new file mode 100644
index 0000000..f21f838
--- /dev/null
+++ b/utils/nano/files/js.nanorc
@@ -0,0 +1,38 @@
+syntax "JavaScript" "\.(js)$"
+
+## Default
+color white "^.+$"
+color brightwhite "\."
+color brightred "\b.*="
+## Decimal, cotal and hexadecimal numbers
+#color yellow "[-+]?(\s[1-9][0-9]*|[^a-zA-Z][1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?"
+color yellow "[-+]?([^a-zA-Z][1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?"
+## Floating point number with at least one digit before decimal point
+color yellow "<[-+]?([0-9]+\.[0-9]*|[0-9]*\.[0-9]+)([EePp][+-]?[0-9]+)?[fFlL]?"
+color yellow "<[-+]?([0-9]+[EePp][+-]?[0-9]+)[fFlL]?"
+## Keywords
+color green "(\bbreak\b|\bcase\b|\bcatch\b|\bcontinue\b|\bdefault\b|\bdelete\b|\bdo\b|\belse\b|\bfinally\b)"
+#color green "(\sbreak\s|\scase\s|\scatch\s|\scontinue\s|\sdefault\s|\sdelete\s|do[^a-zA-Z]|\selse\s|\sfinally\s)"
+#color brightmagenta "(\b[A-Z]+\b|\b([A-Z]+_)+[A-Z]+\b)"
+color brightmagenta "(\b.*:)"
+color magenta "=|:"
+
+color green "(\bfor\b|\bfunction\b|\bif\b|\bin\b|\binstanceof\b|\bnew\b|\bnull\b|\breturn\b|\bswitch\b)"
+color green "(\bswitch\b|\bthis\b|\bthrow\b|\btry\b|\btypeof\b|\bundefined\b|\bvar\b|\bvoid\b|\bwhi|\bwhile\b|b\with\b)"
+## Type specifiers
+color red "(\bArray\b|\bBoolean\b|\bDate\b|\bEnumerator\b|\bError\b|\bFunction\b|\bMath\b)"
+color red "(\bNumber\b|\bObject\b|\bRegExp\b|\bString\b)"
+color red "(\btrue\b|\bfalse\b)"
+## String
+color brightyellow "L?\"(\\"|[^"])*\""
+color brightyellow "L?'(\'|[^'])*'"
+## Escapes
+color red "\\[0-7][0-7]?[0-7]?|\\x[0-9a-fA-F]+|\\[bfnrt'"\?\\]"
+
+## Comments
+#color magenta start="/\*" end="\*/"
+
+## Comment highlighting
+color brightblue "//.*"
+color brightblue start="/\*" end="\*/"
+
diff --git a/utils/nano/files/makefile.nanorc b/utils/nano/files/makefile.nanorc
new file mode 100644
index 0000000..a184306
--- /dev/null
+++ b/utils/nano/files/makefile.nanorc
@@ -0,0 +1,9 @@
+# unattributed syntax highlighting example from wiki.linuxhelp.net/
+
+syntax "makefile" "Makefile[^/]*$"
+color cyan "."
+color red "[:=]"
+color magenta "(\bif\b|\bifeq\b|\belse\b|\bendif\b)"
+color blue "\$+[{(][a-zA-Z0-9_-]+[})]"
+color brightblue "^[^ 	]+:"
+color green "#.*$"
diff --git a/utils/nano/files/nanorc b/utils/nano/files/nanorc
new file mode 100644
index 0000000..e4bb8ad
--- /dev/null
+++ b/utils/nano/files/nanorc
@@ -0,0 +1,282 @@
+## Sample initialization file for GNU nano.
+##
+## Please note that you must have configured nano with --enable-nanorc
+## for this file to be read!  Also note that this file should not be in
+## DOS or Mac format, and that characters specially interpreted by the
+## DOS or Mac format, and that characters specially interpreted by the
+## shell should not be escaped here.
+##
+## To make sure a value is disabled, use "unset <option>".
+##
+## For the options that take parameters, the default value is given.
+## Other options are unset by default.
+##
+## Quotes inside string parameters don't have to be escaped with
+## backslashes.  The last double quote in the string will be treated as
+## its end.  For example, for the "brackets" option, ""')>]}" will match
+## ", ', ), >, ], and }.
+set statuscolor "black,green"
+set titlecolor "white,blue"
+
+#set titlecolor "green,black"
+#set keycolor "brightwhite,blue"
+
+set keycolor "brightgreen"
+set functioncolor "green"
+## Use auto-indentation.
+set autoindent
+
+#set align_page
+## Backup files to filename~.
+# set backup
+
+## The directory to put unique backup files in.
+# set backupdir ""
+
+## Do backwards searches by default.
+# set backwards
+
+## Use bold text instead of reverse video text.
+# set boldtext
+
+## The characters treated as closing brackets when justifying
+## paragraphs.  They cannot contain blank characters.  Only closing
+## punctuation, optionally followed by closing brackets, can end
+## sentences.
+##
+set brackets ""')>]}"
+
+## Do case sensitive searches by default.
+# set casesensitive
+
+## Constantly display the cursor position in the statusbar.  Note that
+## this overrides "quickblank".
+# set const
+
+## Use cut to end of line by default.
+# set cut
+
+## Set the line length for wrapping text and justifying paragraphs.
+## If fill is 0 or less, the line length will be the screen width less
+## this number.
+##
+# set fill -8
+
+## Enable ~/.nano_history for saving and reading search/replace strings.
+#set historylog
+
+## The opening and closing brackets that can be found by bracket
+## searches.  They cannot contain blank characters.  The former set must
+## come before the latter set, and both must be in the same order.
+##
+set matchbrackets "(<[{)>]}"
+
+## Use the blank line below the titlebar as extra editing space.
+#set morespace
+
+## Enable mouse support, if available for your system.  When enabled,
+## mouse clicks can be used to place the cursor, set the mark (with a
+## double click), and execute shortcuts.  The mouse will work in the X
+## Window System, and on the console when gpm is running.
+##
+set mouse
+
+## Allow multiple file buffers (inserting a file will put it into a
+## separate buffer).  You must have configured with --enable-multibuffer
+## for this to work.
+##
+set multibuffer
+
+## Don't convert files from DOS/Mac format.
+# set noconvert
+
+## Don't follow symlinks when writing files.
+# set nofollow
+
+## Don't display the helpful shortcut lists at the bottom of the screen.
+# set nohelp
+
+## Don't add newlines to the ends of files.
+ set nonewlines
+
+## Don't wrap text at all.
+set nowrap
+
+## Set operating directory.  nano will not read or write files outside
+## this directory and its subdirectories.  Also, the current directory
+## is changed to here, so any files are inserted from this dir.  A blank
+## string means the operating directory feature is turned off.
+##
+# set operatingdir ""
+
+## Preserve the XON and XOFF keys (^Q and ^S).
+# set preserve
+
+## The characters treated as closing punctuation when justifying
+## paragraphs.  They cannot contain blank characters.  Only closing
+## punctuation, optionally followed by closing brackets, can end
+## sentences.
+##
+set punct "!.?"
+
+## Do quick statusbar blanking.  Statusbar messages will disappear after
+## 1 keystroke instead of 26.  Note that "const" overrides this.
+##
+set quickblank
+
+## The email-quote string, used to justify email-quoted paragraphs.
+## This is an extended regular expression if your system supports them,
+## otherwise a literal string.  Default:
+# set quotestr "^([ 	]*[#:>\|}])+"
+# set quotestr "^([ \t]*[#:>\|}])+"
+## if you have extended regular expression support, otherwise:
+# set quotestr "> "
+
+## Fix Backspace/Delete confusion problem.
+# set rebinddelete
+
+## Fix numeric keypad key confusion problem.
+# set rebindkeypad
+
+## Do extended regular expression searches by default.
+# set regexp
+
+## Make the Home key smarter.  When Home is pressed anywhere but at the
+## very beginning of non-whitespace characters on a line, the cursor
+## will jump to that beginning (either forwards or backwards).  If the
+## cursor is already at that position, it will jump to the true
+## beginning of the line.
+# set smarthome
+
+## Use smooth scrolling as the default.
+set smooth
+
+## Use this spelling checker instead of the internal one.  This option
+## does not properly have a default value.
+##
+set speller "aspell -x -c"
+
+## Allow nano to be suspended.
+set suspend
+
+## Use this tab size instead of the default; it must be greater than 0.
+set tabsize 4
+
+## Convert typed tabs to spaces.
+# set tabstospaces
+
+## Save automatically on exit, don't prompt.
+# set tempfile
+
+## Disallow file modification.  Why would you want this in an rcfile? ;)
+# set view
+
+## The two single-column characters used to display the first characters
+## of tabs and spaces.  187 in ISO 8859-1 (0000BB in Unicode) and 183 in
+## ISO-8859-1 (0000B7 in Unicode) seem to be good values for these.
+# set whitespace "  "
+
+## Detect word boundaries more accurately by treating punctuation
+## characters as parts of words.
+# set wordbounds
+
+## Enable the new (EXPERIMENTAL) generic undo code, not just for line cuts
+#set undo
+
+## Enable soft line wrapping (AKA full line display)
+#set softwrap
+
+
+## Color setup
+##
+## Format:
+##
+## syntax "short description" ["filename regex" ...]
+##
+## The "none" syntax is reserved; specifying it on the command line is
+## the same as not having a syntax at all.  The "default" syntax is
+## special: it takes no filename regexes, and applies to files that
+## don't match any other syntax's filename regexes.
+##
+## color foreground,background "regex" ["regex"...]
+## or
+## icolor foreground,background "regex" ["regex"...]
+##
+## "color" will do case sensitive matches, while "icolor" will do case
+## insensitive matches.
+##
+## Valid colors: white, black, red, blue, green, yellow, magenta, cyan.
+## For foreground colors, you may use the prefix "bright" to get a
+## stronger highlight.
+##
+## To use multi-line regexes, use the start="regex" end="regex"
+## [start="regex" end="regex"...] format.
+##
+## If your system supports transparency, not specifying a background
+## color will use a transparent color.  If you don't want this, be sure
+## to set the background color to black or white.
+##
+## If you wish, you may put your syntaxes in separate files.  You can
+## make use of such files (which can only include "syntax", "color", and
+## "icolor" commands) as follows:
+##
+## include "/path/to/syntax_file.nanorc"
+##
+## Unless otherwise noted, the name of the syntax file (without the
+## ".nanorc" extension) should be the same as the "short description"
+## name inside that file.  These names are kept fairly short to make
+## them easier to remember and faster to type using nano's -Y option.
+##
+## All regexes should be extended regular expressions.
+
+## Key bindings
+## Please see nanorc(5) for more details on this
+##
+## Here are some samples to get you going
+##
+# bind M-W nowrap main
+# bind M-A casesens search
+# bind ^S research main
+
+#note I and M are seem to be wired to taba and enter
+#changing them causes weird things to happen
+#unbind ^I main
+#unbind ^M main
+#unbind ^Space main 
+
+#Ctrl+A and Ctrl+E have been re-mapped to
+#previous buffer and next buffer
+#this keymapping works together with a keymap that has
+# shift	control	keycode  51 = Control_a   <--- the </,  
+# shift	control	keycode  52 = Control_e   <--- the >/.  
+
+bind ^C copytext main 
+bind ^Q exit all 
+bind ^V uncut main 
+bind ^X exit main 
+bind ^Z undo main 
+bind ^Y redo main 
+bind ^S writeout main 
+bind ^F whereis main 
+bind ^G gotoline main 
+bind ^R replace main 
+bind M-H help all
+bind ^P curpos main 
+bind ^O insert main 
+#bind F5 nohelp all 
+bind ^Space mark main 
+#bind ^A prevbuf main
+#bind ^E nextbuf main
+bind ^N newbuffer insert
+bind M-OF lastline all 
+bind M-OH firstline all 
+## Set this if your backspace key sends delete most of the time (2.1.3+)
+#bind kdel backspace all
+
+include "/usr/share/nano/c.nanorc"
+include "/usr/share/nano/js.nanorc"
+include "/usr/share/nano/makefile.nanorc"
+include "/usr/share/nano/nanorc.nanorc"
+include "/usr/share/nano/patch.nanorc"
+include "/usr/share/nano/sh.nanorc"
+include "/usr/share/nano/xml.nanorc"
diff --git a/utils/nano/files/nanorc.nanorc b/utils/nano/files/nanorc.nanorc
new file mode 100644
index 0000000..6b13f19
--- /dev/null
+++ b/utils/nano/files/nanorc.nanorc
@@ -0,0 +1,16 @@
+## Here is an example for nanorc files.
+##
+syntax "nanorc" "\.?nanorc$"
+## Possible errors and parameters
+icolor brightwhite "^[[:space:]]*((un)?set|include|syntax|i?color).*$"
+## Keywords
+icolor brightgreen "^[[:space:]]*(set|unset)[[:space:]]+(allow_insecure_backup|autoindent|backup|backupdir|backwards|boldtext|brackets|casesensitive|const|cut|fill|historylog|matchbrackets|morespace|mouse|multibuffer|noconvert|nofollow|nohelp|nonewlines|nowrap|operatingdir|preserve|punct)>" "^[[:space:]]*(set|unset)[[:space:]]+(quickblank|quotestr|rebinddelete|rebindkeypad|regexp|smarthome|smooth|softwrap|speller|suspend|suspendenable|tabsize|tabstospaces|tempfile|undo|view|whitespace|wordbounds)>"
+icolor green "(\bset\b|\bunset\b|\binclude\b|\bsyntax\b|\bheader\b)"
+## Colors
+icolor yellow "(\bwhite\b|\bblack\b|\bred\b|\bblue\b|\bgreen\b|\byellow\b|\bmagenta\b|\bcyan\b)"
+icolor magenta "^[[:space:]]*i?color>" "<(start|end)="
+## Strings
+icolor white ""(\\.|[^"])*""
+## Comments
+icolor brightblue "^[[:space:]]*#.*$"
+icolor cyan "^[[:space:]]*##.*$"
diff --git a/utils/nano/files/patch.nanorc b/utils/nano/files/patch.nanorc
new file mode 100644
index 0000000..a788b35
--- /dev/null
+++ b/utils/nano/files/patch.nanorc
@@ -0,0 +1,10 @@
+## Here is an example for patch files.
+##
+syntax "patch" "\.(patch|diff)$"
+color brightgreen "^\+.*"
+color green "^\+\+\+.*"
+color brightblue "^ .*"
+color brightred "^-.*"
+color red "^---.*"
+color brightyellow "^@@.*"
+color magenta "^diff.*"
diff --git a/utils/nano/files/sh.nanorc b/utils/nano/files/sh.nanorc
new file mode 100644
index 0000000..9c3b9c0
--- /dev/null
+++ b/utils/nano/files/sh.nanorc
@@ -0,0 +1,22 @@
+## Here is an example for Bourne shell scripts.
+##
+syntax "sh" "\.sh$"
+header "^#!.*/(ba|k|pdk)?sh[-0-9_]*"
+icolor cyan "."
+icolor brightgreen "^[0-9A-Z_]+\(\)"
+color yellow "(\bcase\b|\bdo\b|\bdone\b|\belif\b|\belse\b|\besac\b|\bexit\b|\bfi\b|\bfor\b|\bfunction\b|\bif\b|\bthen\b|\buntil\b|\bwhile\b)"
+color brightblue "(\bin\b|\blocal\b|\bread\b|\breturn\b|\bselect\b|\bshift\b|\btime\b)"
+color brightblue "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color brightblue "-[Ldefgruwxp]"
+color brightgreen "-(eq|ne|gt|lt|ge|le|s|n|z)"
+color brightblue "(cat\b|\bcd\b|\bchmod\b|\bchown\b|\bcp\b|\becho\b|\benv\b|\bexport\b|\bgrep\b|\binstall\b|\blet\b|\bln\b|\bmake\b|\bmkdir\b|\bmv\b|\brm\b|\bsed\b|\bset\b|\btar\b|\btouch\b|\bumask\b|\bunset\b|\bwhich\b)"
+color cyan "(^|[[:space:]])#.*$"
+color brightwhite ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+color brightblue "[[:space:]]+$"
+icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+
+## Comments
+icolor blue "^[[:space:]]*#.*$"
+icolor blue "^[[:space:]]*##.*$"
+
+
diff --git a/utils/nano/files/xml.nanorc b/utils/nano/files/xml.nanorc
new file mode 100644
index 0000000..11adf18
--- /dev/null
+++ b/utils/nano/files/xml.nanorc
@@ -0,0 +1,10 @@
+## Here is an example for xml files.
+##
+syntax "xml" "\.([jrs]html?|sgml?|xml|xslt?)$"
+color magenta "."
+color green  start="<" end=">"
+color cyan   "<[^> ]+"
+color cyan   ">"
+color yellow start="<!DOCTYPE" end="[/]?>"
+color yellow start="<!--" end="-->"
+color red    "&[^;]*;"
-- 
2.1.4

